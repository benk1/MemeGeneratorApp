{"version":3,"sources":["components/MemeGenerator.jsx","components/Header.jsx","App.js","index.js"],"names":["MemeGenerator","state","topText","bottomText","randomImageUrl","allMemeImages","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","randomNum","Math","floor","random","length","url","axios","get","data","memes","this","onSubmit","className","type","placeholder","onChange","src","alt","Component","Header","App","todos","content","id","characters","loading","handleDelete","filter","todo","addTodo","ReactDOM","render","document","getElementById"],"mappings":"wUA2FeA,E,2MAxFbC,MAAQ,CACNC,QAAS,GACTC,WAAY,GACZC,eAAgB,gCAChBC,cAAe,I,EAsBjBC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlBC,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,aAAe,SAAAL,GACbA,EAAEM,iBAEF,IAAMC,EAAYC,KAAKC,MACrBD,KAAKE,SAAW,EAAKhB,MAAMI,cAAca,QAErCd,EAAiB,EAAKH,MAAMI,cAAcS,GAAWK,IAC3D,EAAKR,SAAS,CACZP,mBAEF,EAAKO,SAAS,CACZT,QAAS,GACTC,WAAY,M,uLA1BJiB,IAAMC,IAAI,sC,gBAFDhB,E,EADjBiB,KACEA,KAAQC,MAIZC,KAAKb,SAAS,CACZN,kB,gFA0BM,IAAD,EACwDmB,KAAKvB,MAA5DC,EADD,EACCA,QAASC,EADV,EACUA,WAAYC,EADtB,EACsBA,eADtB,EACsCC,cAC7C,OACE,6BACE,0BAAMoB,SAAUD,KAAKZ,aAAcc,UAAU,aAC3C,yBAAKA,UAAU,UACb,2BACEC,KAAK,OACLC,YAAY,WACZnB,KAAK,UACLC,MAAOR,EACP2B,SAAUL,KAAKlB,eAEjB,2BACEqB,KAAK,OACLC,YAAY,cACZnB,KAAK,aACLC,MAAOP,EACP0B,SAAUL,KAAKlB,eAEjB,4BACEoB,UAAU,qDACVC,KAAK,SACLlB,KAAK,UAHP,MAME,uBAAGiB,UAAU,yBAAb,WAIN,yBAAKA,UAAU,QACb,yBAAKI,IAAK1B,EAAgB2B,IAAI,KAC9B,wBAAIL,UAAU,OAAOxB,GACrB,wBAAIwB,UAAU,UAAUvB,S,GAlFN6B,aCabC,EAdA,WACb,OACE,6BACE,gCACE,yBACEH,IAAI,iEACJC,IAAI,aAEN,gDCwDOG,E,2MArDbjC,MAAQ,CACNkC,MAAO,CACL,CAAEC,QAAS,eAAgBC,GAAI,GAC/B,CAAED,QAAS,aAAcC,GAAI,GAC7B,CAAED,QAAS,WAAYC,GAAI,GAC3B,CAAED,QAAS,oBAAqBC,GAAI,IAEtCC,WAAY,GACZC,SAAS,G,EAEXC,aAAe,SAAAH,GACb,IAAMF,EAAQ,EAAKlC,MAAMkC,MAAMM,QAAO,SAAAC,GACpC,OAAOA,EAAKL,KAAOA,KAErB,EAAK1B,SAAS,CACZwB,W,EAGJQ,QAAU,SAAAD,GACRA,EAAKL,GAAKtB,KAAKE,SACf,IAAIkB,EAAK,sBAAO,EAAKlC,MAAMkC,OAAlB,CAAyBO,IAClC,EAAK/B,SAAS,CACZwB,W,oKAIFX,KAAKb,SAAS,CACZ4B,SAAS,I,mBAEwBnB,IAAMC,IACvC,mC,gBADYiB,E,EAANhB,KAIRE,KAAKb,SAAS,CACZ4B,SAAS,EACTD,e,gFAIM,IAAD,EACgCd,KAAKvB,MAApCkC,EADD,EACCA,MAAOG,EADR,EACQA,WADR,EACoBC,SACWD,EAAW7B,KAC7B0B,EAAMjB,OAC1B,OACE,yBAAKQ,UAAU,iBACb,kDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAhDUM,aCNlBY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.feaf2dc8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nclass MemeGenerator extends Component {\n  state = {\n    topText: '',\n    bottomText: '',\n    randomImageUrl: 'http://i.imgflip.com/1bij.jpg',\n    allMemeImages: []\n  };\n\n  async componentDidMount() {\n    /*axios.get('https://api.imgflip.com/get_memes').then(res => {\n      const allMemeImages = res.data.data.memes;\n      console.log(allMemeImages);\n      this.setState({\n        allMemeImages\n      });\n    });*/\n    const {\n      data: {\n        data: { memes: allMemeImages }\n      }\n    } = await axios.get('https://api.imgflip.com/get_memes');\n    //console.log('my data', allMemeImages);\n    this.setState({\n      allMemeImages\n    });\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const randomNum = Math.floor(\n      Math.random() * this.state.allMemeImages.length\n    );\n    const randomImageUrl = this.state.allMemeImages[randomNum].url;\n    this.setState({\n      randomImageUrl\n    });\n    this.setState({\n      topText: '',\n      bottomText: ''\n    });\n  };\n  render() {\n    const { topText, bottomText, randomImageUrl, allMemeImages } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className='meme-form'>\n          <div className='inputs'>\n            <input\n              type='text'\n              placeholder='Top Text'\n              name='topText'\n              value={topText}\n              onChange={this.handleChange}\n            />\n            <input\n              type='text'\n              placeholder='Bottom Text'\n              name='bottomText'\n              value={bottomText}\n              onChange={this.handleChange}\n            />\n            <button\n              className='btn waves-effect waves-light color purple darken-4'\n              type='submit'\n              name='action'\n            >\n              Gen\n              <i className='material-icons right '>send</i>\n            </button>\n          </div>\n        </form>\n        <div className='meme'>\n          <img src={randomImageUrl} alt='' />\n          <h2 className='top'>{topText}</h2>\n          <h2 className='bottom'>{bottomText}</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MemeGenerator;\n","import React from 'react';\nconst Header = () => {\n  return (\n    <div>\n      <header>\n        <img\n          src='http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png'\n          alt='Problem?'\n        />\n        <p>Meme Generator</p>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\nimport MemeGenerator from './components/MemeGenerator';\n\n//import TodoItems from './components/TodoItems';\n//import AddTodo from './components/AddTodo';\n//import MyInfo from './components/MyInfo';\nimport Header from './components/Header';\n\nclass App extends Component {\n  state = {\n    todos: [\n      { content: 'buy sausages', id: 1 },\n      { content: 'go to work', id: 2 },\n      { content: 'buy milk', id: 3 },\n      { content: 'time to chill out', id: 4 }\n    ],\n    characters: {},\n    loading: false\n  };\n  handleDelete = id => {\n    const todos = this.state.todos.filter(todo => {\n      return todo.id !== id;\n    });\n    this.setState({\n      todos\n    });\n  };\n  addTodo = todo => {\n    todo.id = Math.random();\n    let todos = [...this.state.todos, todo];\n    this.setState({\n      todos\n    });\n  };\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const { data: characters } = await axios.get(\n      'https://swapi.co/api/people/1/'\n    );\n\n    this.setState({\n      loading: false,\n      characters\n    });\n  }\n\n  render() {\n    const { todos, characters, loading } = this.state;\n    const text = loading ? 'Loading...' : characters.name;\n    const todosLength = todos.length;\n    return (\n      <div className='App container'>\n        <h1>Meme Generator App</h1>\n        <Header />\n        <MemeGenerator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}